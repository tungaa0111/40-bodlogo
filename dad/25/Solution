import java.io.*;
import java.util.*;

import java.util.*;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();

        Stack<Integer> stackNewest = new Stack<>();
        Stack<Integer> stackOldest = new Stack<>();

        for (int i = 0; i < q; i++) {
            int type = scanner.nextInt();

            if (type == 1) {
                int value = scanner.nextInt();
                stackNewest.push(value); // Enqueue
            } else if (type == 2) {
                shiftStacks(stackNewest, stackOldest);
                if (!stackOldest.isEmpty()) {
                    stackOldest.pop(); // Dequeue
                }
            } else if (type == 3) {
                shiftStacks(stackNewest, stackOldest);
                if (!stackOldest.isEmpty()) {
                    System.out.println(stackOldest.peek()); // Print front
                }
            }
        }
        scanner.close();
    }

    // Transfer elements from newest stack to oldest (reverse order)
    private static void shiftStacks(Stack<Integer> newest, Stack<Integer> oldest) {
        if (oldest.isEmpty()) {
            while (!newest.isEmpty()) {
                oldest.push(newest.pop());
            }
        }
    }
}
